apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "10902"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: thanos-store
  name: thanos-store
spec:
  ports:
    - port: 10901
      protocol: TCP
      targetPort: grpc
      name: grpc
    - port: 10902
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: thanos-store
  sessionAffinity: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store
  labels:
    app.kubernetes.io/name: thanos-store
spec:
  podManagementPolicy: Parallel
  replicas: 2
  serviceName: thanos-store
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-store
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-store
    spec:
      containers:
        - name: thanos-store
          image: thanos
          args:
            - store
            - --log.level=info
            - --data-dir=/var/thanos/store
            - --objstore.config-file=/etc/thanos/config.yaml
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 25
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            failureThreshold: 25
          volumeMounts:
            - name: data
              mountPath: /var/thanos/store
            - name: thanos-storage
              mountPath: /etc/thanos
          resources:
            requests:
              cpu: 0m
              memory: 64Mi
            limits:
              cpu: 4000m
              memory: 4000Mi
      securityContext:
        fsGroup: 1001
      volumes:
        - name: thanos-storage
          configMap:
            name: thanos-storage
      serviceAccountName: thanos-s3-serviceaccount
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          ebs.csi.aws.com/volumeType: gp3
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: thanos-store-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: thanos-store
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-store
  minAvailable: 1
