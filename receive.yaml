apiVersion: v1
kind: Service
metadata:
  name: thanos-receive
  labels:
    app.kubernetes.io/name: thanos-receive
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "10902"
spec:
  selector:
    app.kubernetes.io/name: thanos-receive
  clusterIP: None
  ports:
    - name: grpc
      port: 10901
      targetPort: grcp
    - name: http
      port: 10902
      targetPort: http
    - name: remote-write
      port: 19291
      targetPort: remote-write
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-receive
  labels:
    app.kubernetes.io/name: thanos-receive
spec:
  replicas: 2
  serviceName: thanos-receive
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-receive
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-receive
    spec:
      serviceAccountName: thanos-s3-serviceaccount
      containers:
        - name: thanos-receive
          image: thanos
          args:
            - receive
            - --log.level=warn
            - --tsdb.path=/var/thanos/receive
            - --tsdb.retention=48h
            - --label=receive_replica="$(NAME)"
            - --objstore.config-file=/etc/thanos/config.yaml
            - --receive.local-endpoint=$(NAME).thanos-receive.$(NAMESPACE).svc.cluster.local:10901
            - --receive.hashrings-file=/etc/thanos/hashring.json
            - --receive.hashrings-algorithm=ketama
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
            - name: remote-write
              containerPort: 19291
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 25
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 25
            timeoutSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/thanos/receive
            - name: thanos-storage
              mountPath: /etc/thanos/config.yaml
              subPath: config.yaml
            - name: config
              mountPath: /etc/thanos/hashring.json
              subPath: hashring.json
          resources:
            requests:
              cpu: 0m
              memory: 4Gi
            limits:
              cpu: 2000m
              memory: 20Gi
      securityContext:
        fsGroup: 1001
      volumes:
        - name: thanos-storage
          configMap:
            name: thanos-storage
        - name: config
          configMap:
            name: thanos-receive
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          ebs.csi.aws.com/volumeType: gp3
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: thanos-receive
  labels:
    app.kubernetes.io/name: thanos-receive
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-receive
  minAvailable: 1
