---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-frontend
  labels:
    app.kubernetes.io/name: thanos-query-frontend
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/component-instance: query-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-query-frontend
        app.kubernetes.io/component: query-frontend
    spec:
      securityContext:
        fsGroup: 65534
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: thanos-query-frontend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          image: thanos
          imagePullPolicy: IfNotPresent
          env:
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          args:
            - query-frontend
            - --log.level=info
            - --log.format=logfmt
            - --http-address=0.0.0.0:10902
            - --query-frontend.downstream-url=http://thanos-query.infra-monitoring.svc.cluster.local:9090
            - --query-range.split-interval=12h
            - --labels.split-interval=12h
            - --query-range.max-retries-per-request=10
            - --labels.max-retries-per-request=10
            - --query-range.response-cache-config-file=/etc/thanos/query-frontend-cache.yaml
          ports:
            - name: http
              protocol: TCP
              containerPort: 10902
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: "128Mi"
          volumeMounts:
            - name: config
              mountPath: /etc/thanos
      volumes:
        - name: config
          configMap:
            name: thanos-query-frontend-cache
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: thanos-query-frontend
  labels:
    app.kubernetes.io/name: thanos-query-frontend
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/component-instance: query-frontend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/component: query-frontend
  minAvailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-frontend
  labels:
    app.kubernetes.io/name: thanos-query-frontend
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/component-instance: query-frontend
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "10902"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 10902
      targetPort: http
  selector:
    app.kubernetes.io/name: thanos-query-frontend
    app.kubernetes.io/component: query-frontend
